FORMAT: 1A
HOST: https://polls.apiblueprint.org/

# MyTrainy

API per usare la piattaforma MyTrainy, progetto di Ingengeria del Software UniTN 2022

## Registrazione [/api/v1/users]

### Registrazione di un nuovo utente POST
Due tipologie:
* atleta
* allenatore

Crea un nuovo utente che può accedere alla piattaforma. 
Poi in base alla tipologia di utente, potrà eseguire tutte le operazioni che gli sono concesse.

+ Request 

    + Attributes
        - email (string, required) - Email dell'utente
        - password (string, required) - Password scelta dall'utente 
        - userType (string, required) - Tipologia di utente da selezionare

+ Response 200
    
    User created
    
    + Body
            
            {
                "success": "true"
                "email": "user.email"
                "id": "userId"
                "self": ""api/v1/users" + userId"
            }

+ Response 400

    Ritornato se la richiesta è errata : il parametro email è vuoto o scritto in formato errato.
    
    + Body
        
            {
                "error": "'The field "email" must be a non-empty string, in email format'"
            }

+ Response 500

    Ritorna se la email esiste già
    
    + Body
        
            {
                "error": "'The email already exists'"
            }

## Autenticazione [/api/v1/authentications]

### Autenticazione utente

All'inserimento delle credenziali dell'utente, si va a cercare l'esistenza di esso e la correttezza della password per poter effettuare il login.
    
    let user = await User.findOne({
            email: req.body.email
        }).exec();
    
+ Request 

+ Response [Authentication failed. User not found]

    Ritorna se l'utente non viene trovato
    
    + Body
            
            {
                "success": "false"
                "message": "'Authentication failed. User not found'"
            }
            
+ Response [Authentication failed. Wrong password]

    Ritorna se l'utente ha inserito la password sbagliata.
    
    + Body
            
            {
                "success": "false"
                "message": "'Authentication failed. Wrong password'"
            }
            
+ Response 
 
    Login avvenuto
    
    + Body
    
            {
                "success": "true"
                "message": "'Enjoy your token!"
                "token": "token"
                "email": "user.email"
                "id": "user.id"
                "self": ""api/v1/" + user._id"
            }   

## Metodi per le schede di allenamento 

### Ritorna tutte le schede di un utente GET [api/v1/card]

Richiede al database tutte le schede di allenamento dell'utente autenticato, sfruttando il campo userId negli attributi della scheda, controllando che corrisponda all'id dell'utente. 

+ Request 

+ Response 404

    Ritorna se non vengono trovate schede per l'utente.
    
+ Response 200

   Query a buon fine 
   
   + Body
    
            {
                "self": "'api/v1/card/' + dbEntry.id"
                "title": "dbEntry.title"
                "sport": "dbEntry.sport"
                "date": "dbEntry.date"
            }

### Ritorna una scheda nello specifico GET [api/v1/card/:id]

Richiede al database una scheda specifica selezionata dall'utente

+ Request

+ Response 404
    
    Ritorna se non esiste una card con quello specifico id.
    
+ Response 200

    Query a buon fine
    
    + Body 
    
            {
            
            
            
            }
            

### Creazione di una nuova scheda POST [api/v1/card]

L'utente crea una nuova scheda e viene aggiornato il database

+ Request

    + Attributes
        - userId (string) - Id dell'utente 
        - title (string, required, minlength = 1) - Titolo della scheda
        - sport (string, required, minlength = 1) - Tipologia della scheda 
        - date (string, required, minlength = 6) - Data
        - comment (string) - Commento
        
+ Response 400

    Dati non correttamente formattati o mancanti
    
    + Body
    
            { 
                "success": "false",
                "reason": "Wrong format",
                "error": "1"
            }
    
+ Response 406

    Risposta per errori legati al database. 
    
    + Body 
            
            { 
                "success": "false",
                "reason": "db",
                "error": "1"
            }
        
+ Response 200
    
    Query a buon fine

    + Body 
    
            {
                "success": "true"
            }
    
    
    

### Modifica di una scheda PATCH [api/v1/card/:id]

L'utente modifica una scheda e viene aggiornato il database.

+ Response 400

    Dati non correttamente formattati o mancanti
    
    + Body
    
            { 
                "success": "false",
                "reason": "Wrong format",
                "error": "1"
            }
    
+ Response 406

    Risposta per errori legati al database. 
    
    + Body 
            
            { 
                "success": "false",
                "reason": "db",
                "error": "1"
            }
        
+ Response 200
    
    Query a buon fine

    + Body 
    
            {
                "success": "true"
            }

### Cancellazione di una scheda DELETE [api/v1/card/:id]

L'utente cancella una scheda e viene aggioranto il database. 

+ Response 406

    Risposta per errori legati al database. 
    
    + Body 
            
            { 
                "success": "false",
                "reason": "db",
                "error": "1"
            }
        
+ Response 200
    
    Query a buon fine

    + Body 
    
            {
                "success": "true"
            }